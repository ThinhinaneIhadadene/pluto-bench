# CLooG script generated automatically by PLUTO 0.11.4-311-g28e4655
# language: C
c

1 3
1 1 0 

1
my_rank 

# Number of statements
6

# S1 (dst[ q][ w] = (((((src[ q][ w][2] * B2Y) + (src[ q][ w][1] * G2Y)) + (src[ q][ w][0] * R2Y)) + ((1) << (yuv_shift - (1)))) >> yuv_shift);)
8 7
1 0 0 1 0 0 0 
1 0 0 -1 0 0 4999 
1 0 0 0 1 0 0 
1 0 0 0 -1 0 4999 
1 -250 0 1 0 0 0 
1 250 0 -1 0 0 249 
1 0 -250 0 1 0 0 
1 0 250 0 -1 0 249 
0 0 0

# S2 ()
2 4
1 250 0 249 
1 -250 0 4999 
0 0 0

# S3 (for (__p=0; __p<nprocs; __p++) { receiver_list[__p] = 0; })
1 3
1 0 1 
0 0 0

# S4 (sigma_dst_0(t1, my_rank, nprocs, receiver_list))
2 4
1 250 0 249 
1 -250 0 4999 
0 0 0

# S5 (IF_TIME(t_comm_start = rtclock());				for (__p=0; __p<nprocs; __p++) {				send_counts_dst[__p] = receiver_list[__p]? send_count_dst: 0;				}				MPI_Alltoall(send_counts_dst, 1, MPI_INT,					recv_counts_dst, 1, MPI_INT, MPI_COMM_WORLD);				req_count=0;				for (__p=0; __p<nprocs; __p++) {				if(send_counts_dst[__p] >= 1) {IF_TIME(__total_count += send_count_dst);				MPI_Isend(send_buf_dst, send_count_dst, MPI_DOUBLE,					__p, 123, MPI_COMM_WORLD, &reqs[req_count++]);}}for (__p=0; __p<nprocs; __p++) {				if(recv_counts_dst[__p] >= 1) {				MPI_Irecv(recv_buf_dst+displs_dst[__p], recv_counts_dst[__p], MPI_DOUBLE,					__p, 123, MPI_COMM_WORLD, &reqs[req_count++]);}}				MPI_Waitall(req_count, reqs, stats);				send_count_dst = 0;                 for (__p=0; __p<nprocs; __p++) curr_displs_dst[__p] = 0;IF_TIME(t_comm += rtclock() - t_comm_start);)
1 3
1 0 1 
0 0 0

# S6 ()
2 4
1 250 0 249 
1 -250 0 4999 
0 0 0

# we want cloog to set the iterator names
0

# Number of scattering functions
6

# T(S1)
5 12
0 1 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 -1 0 0 0 0 0 
0 0 0 1 0 0 0 -1 0 0 0 0 
0 0 0 0 1 0 0 0 -1 0 0 0 
0 0 0 0 0 1 0 0 0 -1 0 0 

# T(S2)
5 9
0 1 0 0 0 0 0 0 -1 
0 0 1 0 0 0 -1 0 0 
0 0 0 1 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 
0 0 0 0 0 1 0 0 0 

# T(S3)
5 8
0 1 0 0 0 0 0 -2 
0 0 1 0 0 0 0 0 
0 0 0 1 0 0 0 0 
0 0 0 0 1 0 0 0 
0 0 0 0 0 1 0 0 

# T(S4)
5 9
0 1 0 0 0 0 0 0 -3 
0 0 1 0 0 0 -1 0 0 
0 0 0 1 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 
0 0 0 0 0 1 0 0 0 

# T(S5)
5 8
0 1 0 0 0 0 0 -4 
0 0 1 0 0 0 0 0 
0 0 0 1 0 0 0 0 
0 0 0 0 1 0 0 0 
0 0 0 0 0 1 0 0 

# T(S6)
5 9
0 1 0 0 0 0 0 0 -5 
0 0 1 0 0 0 -1 0 0 
0 0 0 1 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 
0 0 0 0 0 1 0 0 0 

# we will set the scattering dimension names
5
t1 t2 t3 t4 t5 
